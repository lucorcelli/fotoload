generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model produto {
  id                  Int                   @id @default(autoincrement())
  nome                String                @db.VarChar(100)
  descricao           String
  referencia_fabrica  String?               @db.VarChar(50)
  codigo_barras       String?               @db.VarChar(50)
  usuario_id          Int
  categoria_id   Int
  categoria          categoria @relation(fields: [categoria_id], references: [id])
  nota_atual          Int?                  @default(0)
  data_criacao        DateTime?             @default(now()) @db.Timestamp(6)
  usuario             usuario               @relation(fields: [usuario_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  produto_campo_extra produto_campo_extra[]
  produto_foto        produto_foto[]
  produto_nota        produto_nota[]
  transacao_credito   transacao_credito[]
}

model produto_campo_extra {
  id         Int     @id @default(autoincrement())
  produto_id Int
  campo      String? @db.VarChar(50)
  valor      String?
  produto    produto @relation(fields: [produto_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model produto_foto {
  id         Int     @id @default(autoincrement())
  produto_id Int
  url_foto   String  @db.VarChar(255)
  ordem      Int?    @default(1)
  produto    produto @relation(fields: [produto_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model produto_nota {
  id           Int       @id @default(autoincrement())
  produto_id   Int
  nota         Int?
  origem       String?   @db.VarChar(50)
  usuario_id   Int?
  data_criacao DateTime? @default(now()) @db.Timestamp(6)
  comentario   String?
  produto      produto   @relation(fields: [produto_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  usuario      usuario?  @relation(fields: [usuario_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model table_name {
  id          BigInt   @id @default(autoincrement())
  inserted_at DateTime @default(dbgenerated("timezone('utc'::text, now())")) @db.Timestamptz(6)
  updated_at  DateTime @default(dbgenerated("timezone('utc'::text, now())")) @db.Timestamptz(6)
  data        Json?
  name        String?
}

model transacao_credito {
  id             Int       @id @default(autoincrement())
  usuario_id     Int
  tipo           String?   @db.VarChar(20)
  valor          Int
  produto_id     Int?
  data_transacao DateTime? @default(now()) @db.Timestamp(6)
  descricao      String?
  produto        produto?  @relation(fields: [produto_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  usuario        usuario   @relation(fields: [usuario_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model usuario {
  id                Int                 @id @default(autoincrement())
  nome              String?             @db.VarChar(100)
  email             String?             @unique @db.VarChar(100)
  saldo_creditos    Int?                @default(0)
  saldo_debitos     Int?                @default(0)
  data_cadastro     DateTime?           @default(now()) @db.Timestamp(6)
  produto           produto[]
  produto_nota      produto_nota[]
  transacao_credito transacao_credito[]
}
model categoria {
  id        Int      @id @default(autoincrement())
  nome      String
  produtos  produto[]
}
